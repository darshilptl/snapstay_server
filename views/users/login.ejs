<% layout("/layouts/boilerplate") %>

  <body>
    <div class="container-fluid d-flex align-items-center justify-content-center min-vh-100">
      <div class="row w-100">
        <!-- Image Side -->
        <div class="col-md-6 d-none d-md-block">
          <img src="/images/login-img.jpg" alt="Login Image" class="img-fluid h-100" style="object-fit: cover;">
        </div>

        <!-- Form Side -->
        <div class="col-md-6 d-flex align-items-center justify-content-center">
          <div class="form-container">
            <h1 class="text-center mb-4">Log In</h1>
            <form id="loginForm" action="/login" method="post" class="needs-validation" novalidate>
              <div class="mb-4">
                <label for="username" class="form-label">Username</label>
                <input name="username" id="username" type="text" class="form-control" required>
                <div class="invalid-feedback">
                  Please enter your username.
                </div>
              </div>
              <div class="mb-4">
                <label for="password" class="form-label">Password</label>
                <input name="password" id="password" type="password" class="form-control" required>
                <div class="invalid-feedback">
                  Please enter your password.
                </div>
              </div>
              <button type="submit" class="btn btn-primary button">Log In</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      // JavaScript for handling client-side validation
      (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission if invalid
        Array.prototype.slice.call(forms)
          .forEach(function (form) {
            form.addEventListener('submit', function (event) {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }

              form.classList.add('was-validated')
            }, false)
          })
      })()
    </script>
  </body>

  <style>
    .form-container {
      max-width: 400px;
      width: 100%;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      background: #fff;
    }

    .container-fluid {
      padding: 0;
    }

    .img-fluid {
      height: 100vh;
      object-fit: cover;
    }

    .form-control:focus {
      border-color: #007bff;
      box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
    }

    .button {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      padding: 0.375rem 0.75rem;
      font-size: 1rem;
      line-height: 1.5;
      border-radius: 0.25rem;
      transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, color 0.15s ease-in-out,
        box-shadow 0.15s ease-in-out;
    }

    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #004085;
    }

    .was-validated .form-control:invalid {
      border-color: #dc3545;
    }

    .was-validated .form-control:invalid~.invalid-feedback {
      display: block;
    }

    .invalid-feedback {
      display: none;
    }
  </style>